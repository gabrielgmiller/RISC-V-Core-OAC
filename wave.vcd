$date
	Thu Aug 14 19:52:29 2025
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module testbench $end
$var reg 1 ! reset $end
$var integer 32 " i [31:0] $end
$scope module UUT $end
$var wire 1 # andBranch $end
$var wire 1 $ orJump $end
$var wire 1 ! reset $end
$var wire 1 % zero $end
$var wire 32 & resAdderB [31:0] $end
$var wire 32 ' resAdderA [31:0] $end
$var wire 32 ( nextPCPosition [31:0] $end
$var wire 32 ) ndInputALU [31:0] $end
$var wire 32 * instructionCurrent [31:0] $end
$var wire 32 + instructionAddress [31:0] $end
$var wire 32 , imm [31:0] $end
$var wire 32 - dataToWrite [31:0] $end
$var wire 32 . dataReadRegister2 [31:0] $end
$var wire 32 / dataReadRegister1 [31:0] $end
$var wire 32 0 dataReadFromMemory [31:0] $end
$var wire 1 1 clk $end
$var wire 1 2 RegWrite $end
$var wire 1 3 RegDst $end
$var wire 1 4 MemWrite $end
$var wire 1 5 MemToReg $end
$var wire 1 6 MemRead $end
$var wire 1 7 Jump $end
$var wire 1 8 Branch $end
$var wire 1 9 ALUSrc $end
$var wire 32 : ALUResult [31:0] $end
$var wire 1 ; ALUOp1 $end
$var wire 1 < ALUOp0 $end
$var wire 4 = ALUOp [3:0] $end
$scope module adderA $end
$var wire 32 > result [31:0] $end
$var wire 1 ? Cout $end
$var wire 32 @ B [31:0] $end
$var wire 32 A A [31:0] $end
$upscope $end
$scope module adderB $end
$var wire 32 B B [31:0] $end
$var wire 32 C result [31:0] $end
$var wire 1 D Cout $end
$var wire 32 E A [31:0] $end
$upscope $end
$scope module alu $end
$var wire 1 % zero $end
$var wire 32 F result [31:0] $end
$var wire 32 G resSub [31:0] $end
$var wire 32 H resSrl [31:0] $end
$var wire 32 I resOr [31:0] $end
$var wire 32 J resAnd [31:0] $end
$var wire 32 K resAdd [31:0] $end
$var wire 32 L B [31:0] $end
$var wire 4 M ALUOp [3:0] $end
$var wire 32 N A [31:0] $end
$scope begin MUX_BIT[0] $end
$var wire 1 O sel_add $end
$var wire 1 P sel_and $end
$var wire 1 Q sel_or $end
$var wire 1 R sel_srl $end
$var wire 1 S sel_sub $end
$var parameter 2 T i $end
$upscope $end
$scope begin MUX_BIT[1] $end
$var wire 1 U sel_add $end
$var wire 1 V sel_and $end
$var wire 1 W sel_or $end
$var wire 1 X sel_srl $end
$var wire 1 Y sel_sub $end
$var parameter 2 Z i $end
$upscope $end
$scope begin MUX_BIT[2] $end
$var wire 1 [ sel_add $end
$var wire 1 \ sel_and $end
$var wire 1 ] sel_or $end
$var wire 1 ^ sel_srl $end
$var wire 1 _ sel_sub $end
$var parameter 3 ` i $end
$upscope $end
$scope begin MUX_BIT[3] $end
$var wire 1 a sel_add $end
$var wire 1 b sel_and $end
$var wire 1 c sel_or $end
$var wire 1 d sel_srl $end
$var wire 1 e sel_sub $end
$var parameter 3 f i $end
$upscope $end
$scope begin MUX_BIT[4] $end
$var wire 1 g sel_add $end
$var wire 1 h sel_and $end
$var wire 1 i sel_or $end
$var wire 1 j sel_srl $end
$var wire 1 k sel_sub $end
$var parameter 4 l i $end
$upscope $end
$scope begin MUX_BIT[5] $end
$var wire 1 m sel_add $end
$var wire 1 n sel_and $end
$var wire 1 o sel_or $end
$var wire 1 p sel_srl $end
$var wire 1 q sel_sub $end
$var parameter 4 r i $end
$upscope $end
$scope begin MUX_BIT[6] $end
$var wire 1 s sel_add $end
$var wire 1 t sel_and $end
$var wire 1 u sel_or $end
$var wire 1 v sel_srl $end
$var wire 1 w sel_sub $end
$var parameter 4 x i $end
$upscope $end
$scope begin MUX_BIT[7] $end
$var wire 1 y sel_add $end
$var wire 1 z sel_and $end
$var wire 1 { sel_or $end
$var wire 1 | sel_srl $end
$var wire 1 } sel_sub $end
$var parameter 4 ~ i $end
$upscope $end
$scope begin MUX_BIT[8] $end
$var wire 1 !" sel_add $end
$var wire 1 "" sel_and $end
$var wire 1 #" sel_or $end
$var wire 1 $" sel_srl $end
$var wire 1 %" sel_sub $end
$var parameter 5 &" i $end
$upscope $end
$scope begin MUX_BIT[9] $end
$var wire 1 '" sel_add $end
$var wire 1 (" sel_and $end
$var wire 1 )" sel_or $end
$var wire 1 *" sel_srl $end
$var wire 1 +" sel_sub $end
$var parameter 5 ," i $end
$upscope $end
$scope begin MUX_BIT[10] $end
$var wire 1 -" sel_add $end
$var wire 1 ." sel_and $end
$var wire 1 /" sel_or $end
$var wire 1 0" sel_srl $end
$var wire 1 1" sel_sub $end
$var parameter 5 2" i $end
$upscope $end
$scope begin MUX_BIT[11] $end
$var wire 1 3" sel_add $end
$var wire 1 4" sel_and $end
$var wire 1 5" sel_or $end
$var wire 1 6" sel_srl $end
$var wire 1 7" sel_sub $end
$var parameter 5 8" i $end
$upscope $end
$scope begin MUX_BIT[12] $end
$var wire 1 9" sel_add $end
$var wire 1 :" sel_and $end
$var wire 1 ;" sel_or $end
$var wire 1 <" sel_srl $end
$var wire 1 =" sel_sub $end
$var parameter 5 >" i $end
$upscope $end
$scope begin MUX_BIT[13] $end
$var wire 1 ?" sel_add $end
$var wire 1 @" sel_and $end
$var wire 1 A" sel_or $end
$var wire 1 B" sel_srl $end
$var wire 1 C" sel_sub $end
$var parameter 5 D" i $end
$upscope $end
$scope begin MUX_BIT[14] $end
$var wire 1 E" sel_add $end
$var wire 1 F" sel_and $end
$var wire 1 G" sel_or $end
$var wire 1 H" sel_srl $end
$var wire 1 I" sel_sub $end
$var parameter 5 J" i $end
$upscope $end
$scope begin MUX_BIT[15] $end
$var wire 1 K" sel_add $end
$var wire 1 L" sel_and $end
$var wire 1 M" sel_or $end
$var wire 1 N" sel_srl $end
$var wire 1 O" sel_sub $end
$var parameter 5 P" i $end
$upscope $end
$scope begin MUX_BIT[16] $end
$var wire 1 Q" sel_add $end
$var wire 1 R" sel_and $end
$var wire 1 S" sel_or $end
$var wire 1 T" sel_srl $end
$var wire 1 U" sel_sub $end
$var parameter 6 V" i $end
$upscope $end
$scope begin MUX_BIT[17] $end
$var wire 1 W" sel_add $end
$var wire 1 X" sel_and $end
$var wire 1 Y" sel_or $end
$var wire 1 Z" sel_srl $end
$var wire 1 [" sel_sub $end
$var parameter 6 \" i $end
$upscope $end
$scope begin MUX_BIT[18] $end
$var wire 1 ]" sel_add $end
$var wire 1 ^" sel_and $end
$var wire 1 _" sel_or $end
$var wire 1 `" sel_srl $end
$var wire 1 a" sel_sub $end
$var parameter 6 b" i $end
$upscope $end
$scope begin MUX_BIT[19] $end
$var wire 1 c" sel_add $end
$var wire 1 d" sel_and $end
$var wire 1 e" sel_or $end
$var wire 1 f" sel_srl $end
$var wire 1 g" sel_sub $end
$var parameter 6 h" i $end
$upscope $end
$scope begin MUX_BIT[20] $end
$var wire 1 i" sel_add $end
$var wire 1 j" sel_and $end
$var wire 1 k" sel_or $end
$var wire 1 l" sel_srl $end
$var wire 1 m" sel_sub $end
$var parameter 6 n" i $end
$upscope $end
$scope begin MUX_BIT[21] $end
$var wire 1 o" sel_add $end
$var wire 1 p" sel_and $end
$var wire 1 q" sel_or $end
$var wire 1 r" sel_srl $end
$var wire 1 s" sel_sub $end
$var parameter 6 t" i $end
$upscope $end
$scope begin MUX_BIT[22] $end
$var wire 1 u" sel_add $end
$var wire 1 v" sel_and $end
$var wire 1 w" sel_or $end
$var wire 1 x" sel_srl $end
$var wire 1 y" sel_sub $end
$var parameter 6 z" i $end
$upscope $end
$scope begin MUX_BIT[23] $end
$var wire 1 {" sel_add $end
$var wire 1 |" sel_and $end
$var wire 1 }" sel_or $end
$var wire 1 ~" sel_srl $end
$var wire 1 !# sel_sub $end
$var parameter 6 "# i $end
$upscope $end
$scope begin MUX_BIT[24] $end
$var wire 1 ## sel_add $end
$var wire 1 $# sel_and $end
$var wire 1 %# sel_or $end
$var wire 1 &# sel_srl $end
$var wire 1 '# sel_sub $end
$var parameter 6 (# i $end
$upscope $end
$scope begin MUX_BIT[25] $end
$var wire 1 )# sel_add $end
$var wire 1 *# sel_and $end
$var wire 1 +# sel_or $end
$var wire 1 ,# sel_srl $end
$var wire 1 -# sel_sub $end
$var parameter 6 .# i $end
$upscope $end
$scope begin MUX_BIT[26] $end
$var wire 1 /# sel_add $end
$var wire 1 0# sel_and $end
$var wire 1 1# sel_or $end
$var wire 1 2# sel_srl $end
$var wire 1 3# sel_sub $end
$var parameter 6 4# i $end
$upscope $end
$scope begin MUX_BIT[27] $end
$var wire 1 5# sel_add $end
$var wire 1 6# sel_and $end
$var wire 1 7# sel_or $end
$var wire 1 8# sel_srl $end
$var wire 1 9# sel_sub $end
$var parameter 6 :# i $end
$upscope $end
$scope begin MUX_BIT[28] $end
$var wire 1 ;# sel_add $end
$var wire 1 <# sel_and $end
$var wire 1 =# sel_or $end
$var wire 1 ># sel_srl $end
$var wire 1 ?# sel_sub $end
$var parameter 6 @# i $end
$upscope $end
$scope begin MUX_BIT[29] $end
$var wire 1 A# sel_add $end
$var wire 1 B# sel_and $end
$var wire 1 C# sel_or $end
$var wire 1 D# sel_srl $end
$var wire 1 E# sel_sub $end
$var parameter 6 F# i $end
$upscope $end
$scope begin MUX_BIT[30] $end
$var wire 1 G# sel_add $end
$var wire 1 H# sel_and $end
$var wire 1 I# sel_or $end
$var wire 1 J# sel_srl $end
$var wire 1 K# sel_sub $end
$var parameter 6 L# i $end
$upscope $end
$scope begin MUX_BIT[31] $end
$var wire 1 M# sel_add $end
$var wire 1 N# sel_and $end
$var wire 1 O# sel_or $end
$var wire 1 P# sel_srl $end
$var wire 1 Q# sel_sub $end
$var parameter 6 R# i $end
$upscope $end
$scope module adder $end
$var wire 32 S# result [31:0] $end
$var wire 1 T# Cout $end
$var wire 32 U# B [31:0] $end
$var wire 32 V# A [31:0] $end
$upscope $end
$scope module andmod $end
$var wire 32 W# result [31:0] $end
$var wire 32 X# B [31:0] $end
$var wire 32 Y# A [31:0] $end
$scope begin genblk1[0] $end
$var parameter 2 Z# i $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 [# i $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 \# i $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 ]# i $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 ^# i $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 _# i $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 `# i $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 a# i $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 b# i $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 c# i $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 d# i $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 e# i $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 f# i $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 g# i $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 h# i $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 i# i $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 j# i $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 k# i $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 l# i $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 m# i $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 n# i $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 o# i $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 p# i $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 q# i $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 r# i $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 s# i $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 t# i $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 u# i $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 v# i $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 w# i $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 x# i $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 y# i $end
$upscope $end
$upscope $end
$scope module ormod $end
$var wire 32 z# result [31:0] $end
$var wire 32 {# B [31:0] $end
$var wire 32 |# A [31:0] $end
$scope begin genblk1[0] $end
$var parameter 2 }# i $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 ~# i $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 !$ i $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 "$ i $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 #$ i $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 $$ i $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 %$ i $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 &$ i $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 '$ i $end
$upscope $end
$scope begin genblk1[9] $end
$var parameter 5 ($ i $end
$upscope $end
$scope begin genblk1[10] $end
$var parameter 5 )$ i $end
$upscope $end
$scope begin genblk1[11] $end
$var parameter 5 *$ i $end
$upscope $end
$scope begin genblk1[12] $end
$var parameter 5 +$ i $end
$upscope $end
$scope begin genblk1[13] $end
$var parameter 5 ,$ i $end
$upscope $end
$scope begin genblk1[14] $end
$var parameter 5 -$ i $end
$upscope $end
$scope begin genblk1[15] $end
$var parameter 5 .$ i $end
$upscope $end
$scope begin genblk1[16] $end
$var parameter 6 /$ i $end
$upscope $end
$scope begin genblk1[17] $end
$var parameter 6 0$ i $end
$upscope $end
$scope begin genblk1[18] $end
$var parameter 6 1$ i $end
$upscope $end
$scope begin genblk1[19] $end
$var parameter 6 2$ i $end
$upscope $end
$scope begin genblk1[20] $end
$var parameter 6 3$ i $end
$upscope $end
$scope begin genblk1[21] $end
$var parameter 6 4$ i $end
$upscope $end
$scope begin genblk1[22] $end
$var parameter 6 5$ i $end
$upscope $end
$scope begin genblk1[23] $end
$var parameter 6 6$ i $end
$upscope $end
$scope begin genblk1[24] $end
$var parameter 6 7$ i $end
$upscope $end
$scope begin genblk1[25] $end
$var parameter 6 8$ i $end
$upscope $end
$scope begin genblk1[26] $end
$var parameter 6 9$ i $end
$upscope $end
$scope begin genblk1[27] $end
$var parameter 6 :$ i $end
$upscope $end
$scope begin genblk1[28] $end
$var parameter 6 ;$ i $end
$upscope $end
$scope begin genblk1[29] $end
$var parameter 6 <$ i $end
$upscope $end
$scope begin genblk1[30] $end
$var parameter 6 =$ i $end
$upscope $end
$scope begin genblk1[31] $end
$var parameter 6 >$ i $end
$upscope $end
$upscope $end
$scope module srlmod $end
$var wire 32 ?$ result [31:0] $end
$var wire 32 @$ B [31:0] $end
$var wire 32 A$ A [31:0] $end
$upscope $end
$scope module subtract $end
$var wire 32 B$ result [31:0] $end
$var wire 1 C$ Cout $end
$var wire 32 D$ B [31:0] $end
$var wire 32 E$ A [31:0] $end
$upscope $end
$upscope $end
$scope module aluctrl $end
$var wire 4 F$ funct [3:0] $end
$var wire 1 G$ isB $end
$var wire 1 H$ isI $end
$var wire 1 I$ isLS $end
$var wire 1 J$ isR $end
$var wire 1 K$ sel_add $end
$var wire 1 L$ sel_and $end
$var wire 1 M$ sel_or $end
$var wire 1 N$ sel_ori $end
$var wire 1 O$ sel_srl $end
$var wire 1 P$ sel_sub $end
$var wire 4 Q$ operation [3:0] $end
$var wire 1 R$ f7_5 $end
$var wire 3 S$ f3 [2:0] $end
$var wire 1 ; ALUOp1 $end
$var wire 1 < ALUOp0 $end
$upscope $end
$scope module clkgen $end
$var reg 1 1 clk $end
$upscope $end
$scope module control $end
$var wire 1 < ALUOp0 $end
$var wire 1 ; ALUOp1 $end
$var wire 1 9 ALUSrc $end
$var wire 1 8 Branch $end
$var wire 1 7 Jump $end
$var wire 1 6 MemRead $end
$var wire 1 5 MemToReg $end
$var wire 1 4 MemWrite $end
$var wire 7 T$ Op [6:0] $end
$var wire 1 3 RegDst $end
$var wire 1 2 RegWrite $end
$var wire 1 U$ Store $end
$var wire 1 V$ R_type $end
$var wire 1 W$ Load $end
$var wire 1 X$ Jump_type $end
$var wire 1 Y$ I_arith $end
$var wire 1 Z$ Branch_type $end
$upscope $end
$scope module datamem $end
$var wire 1 1 clk $end
$var wire 32 [$ endereco [31:0] $end
$var wire 1 6 mem_read $end
$var wire 1 4 mem_write $end
$var wire 32 \$ write_data [31:0] $end
$var reg 32 ]$ read_data [31:0] $end
$var integer 32 ^$ i [31:0] $end
$upscope $end
$scope module immgen $end
$var wire 7 _$ opcode [6:0] $end
$var wire 32 `$ instruction [31:0] $end
$var wire 32 a$ immS [31:0] $end
$var wire 32 b$ immJ [31:0] $end
$var wire 32 c$ immI [31:0] $end
$var wire 32 d$ immB [31:0] $end
$var reg 32 e$ immediate [31:0] $end
$upscope $end
$scope module instmemo $end
$var wire 32 f$ instruction [31:0] $end
$var wire 32 g$ PC [31:0] $end
$upscope $end
$scope module muxA $end
$var wire 32 h$ A [31:0] $end
$var wire 32 i$ B [31:0] $end
$var wire 1 $ select $end
$var wire 32 j$ result [31:0] $end
$upscope $end
$scope module muxB $end
$var wire 32 k$ A [31:0] $end
$var wire 32 l$ B [31:0] $end
$var wire 1 5 select $end
$var wire 32 m$ result [31:0] $end
$upscope $end
$scope module muxC $end
$var wire 32 n$ A [31:0] $end
$var wire 1 9 select $end
$var wire 32 o$ result [31:0] $end
$var wire 32 p$ B [31:0] $end
$upscope $end
$scope module programCounter $end
$var wire 1 1 clk $end
$var wire 32 q$ datain [31:0] $end
$var wire 1 r$ enable $end
$var wire 1 ! reset $end
$var reg 32 s$ dataout [31:0] $end
$upscope $end
$scope module regs $end
$var wire 1 1 clk $end
$var wire 5 t$ readRegister1 [4:0] $end
$var wire 5 u$ readRegister2 [4:0] $end
$var wire 1 2 regWrite $end
$var wire 32 v$ writeData [31:0] $end
$var wire 5 w$ writeRegister [4:0] $end
$var reg 32 x$ readData1 [31:0] $end
$var reg 32 y$ readData2 [31:0] $end
$var reg 32 z$ register0 [31:0] $end
$var reg 32 {$ register1 [31:0] $end
$var reg 32 |$ register10 [31:0] $end
$var reg 32 }$ register11 [31:0] $end
$var reg 32 ~$ register12 [31:0] $end
$var reg 32 !% register13 [31:0] $end
$var reg 32 "% register14 [31:0] $end
$var reg 32 #% register15 [31:0] $end
$var reg 32 $% register16 [31:0] $end
$var reg 32 %% register17 [31:0] $end
$var reg 32 &% register18 [31:0] $end
$var reg 32 '% register19 [31:0] $end
$var reg 32 (% register2 [31:0] $end
$var reg 32 )% register20 [31:0] $end
$var reg 32 *% register21 [31:0] $end
$var reg 32 +% register22 [31:0] $end
$var reg 32 ,% register23 [31:0] $end
$var reg 32 -% register24 [31:0] $end
$var reg 32 .% register25 [31:0] $end
$var reg 32 /% register26 [31:0] $end
$var reg 32 0% register27 [31:0] $end
$var reg 32 1% register28 [31:0] $end
$var reg 32 2% register29 [31:0] $end
$var reg 32 3% register3 [31:0] $end
$var reg 32 4% register30 [31:0] $end
$var reg 32 5% register31 [31:0] $end
$var reg 32 6% register4 [31:0] $end
$var reg 32 7% register5 [31:0] $end
$var reg 32 8% register6 [31:0] $end
$var reg 32 9% register7 [31:0] $end
$var reg 32 :% register8 [31:0] $end
$var reg 32 ;% register9 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11111 >$
b11110 =$
b11101 <$
b11100 ;$
b11011 :$
b11010 9$
b11001 8$
b11000 7$
b10111 6$
b10110 5$
b10101 4$
b10100 3$
b10011 2$
b10010 1$
b10001 0$
b10000 /$
b1111 .$
b1110 -$
b1101 ,$
b1100 +$
b1011 *$
b1010 )$
b1001 ($
b1000 '$
b111 &$
b110 %$
b101 $$
b100 #$
b11 "$
b10 !$
b1 ~#
b0 }#
b11111 y#
b11110 x#
b11101 w#
b11100 v#
b11011 u#
b11010 t#
b11001 s#
b11000 r#
b10111 q#
b10110 p#
b10101 o#
b10100 n#
b10011 m#
b10010 l#
b10001 k#
b10000 j#
b1111 i#
b1110 h#
b1101 g#
b1100 f#
b1011 e#
b1010 d#
b1001 c#
b1000 b#
b111 a#
b110 `#
b101 _#
b100 ^#
b11 ]#
b10 \#
b1 [#
b0 Z#
b11111 R#
b11110 L#
b11101 F#
b11100 @#
b11011 :#
b11010 4#
b11001 .#
b11000 (#
b10111 "#
b10110 z"
b10101 t"
b10100 n"
b10011 h"
b10010 b"
b10001 \"
b10000 V"
b1111 P"
b1110 J"
b1101 D"
b1100 >"
b1011 8"
b1010 2"
b1001 ,"
b1000 &"
b111 ~
b110 x
b101 r
b100 l
b11 f
b10 `
b1 Z
b0 T
$end
#0
$dumpvars
b0 ;%
b0 :%
b0 9%
b0 8%
b0 7%
b0 6%
b0 5%
b0 4%
b0 3%
b0 2%
b0 1%
b0 0%
b0 /%
b0 .%
b0 -%
b0 ,%
b0 +%
b0 *%
b0 )%
b0 (%
b0 '%
b0 &%
b0 %%
b0 $%
b0 #%
b0 "%
b0 !%
b0 ~$
b0 }$
b0 |$
b0 {$
b0 z$
b0 y$
b0 x$
b1 w$
b111 v$
b111 u$
b0 t$
b0 s$
1r$
b100 q$
b0 p$
b111 o$
b111 n$
b111 m$
b111 l$
b0 k$
b100 j$
b100 i$
b111 h$
b0 g$
b11100000000000010010011 f$
b111 e$
b100000000000 d$
b111 c$
b100000000110 b$
b1 a$
b11100000000000010010011 `$
b10011 _$
b10000000 ^$
b0 ]$
b0 \$
b111 [$
0Z$
1Y$
0X$
0W$
0V$
0U$
b10011 T$
b0 S$
0R$
b10 Q$
0P$
0O$
0N$
0M$
0L$
1K$
0J$
0I$
1H$
0G$
b0 F$
b0 E$
b111 D$
1C$
b11111111111111111111111111111001 B$
b0 A$
b111 @$
b0 ?$
b0 |#
b111 {#
b111 z#
b0 Y#
b111 X#
b0 W#
b0 V#
b111 U#
0T#
b111 S#
0Q#
0P#
0O#
0N#
1M#
0K#
0J#
0I#
0H#
1G#
0E#
0D#
0C#
0B#
1A#
0?#
0>#
0=#
0<#
1;#
09#
08#
07#
06#
15#
03#
02#
01#
00#
1/#
0-#
0,#
0+#
0*#
1)#
0'#
0&#
0%#
0$#
1##
0!#
0~"
0}"
0|"
1{"
0y"
0x"
0w"
0v"
1u"
0s"
0r"
0q"
0p"
1o"
0m"
0l"
0k"
0j"
1i"
0g"
0f"
0e"
0d"
1c"
0a"
0`"
0_"
0^"
1]"
0["
0Z"
0Y"
0X"
1W"
0U"
0T"
0S"
0R"
1Q"
0O"
0N"
0M"
0L"
1K"
0I"
0H"
0G"
0F"
1E"
0C"
0B"
0A"
0@"
1?"
0="
0<"
0;"
0:"
19"
07"
06"
05"
04"
13"
01"
00"
0/"
0."
1-"
0+"
0*"
0)"
0("
1'"
0%"
0$"
0#"
0""
1!"
0}
0|
0{
0z
1y
0w
0v
0u
0t
1s
0q
0p
0o
0n
1m
0k
0j
0i
0h
1g
0e
0d
0c
0b
1a
0_
0^
0]
0\
1[
0Y
0X
0W
0V
1U
0S
0R
0Q
0P
1O
b0 N
b10 M
b111 L
b111 K
b0 J
b111 I
b0 H
b11111111111111111111111111111001 G
b111 F
b0 E
0D
b100 C
b100 B
b0 A
b111 @
0?
b111 >
b10 =
1<
1;
b111 :
19
08
07
06
05
04
03
12
01
b0 0
b0 /
b0 .
b111 -
b111 ,
b0 +
b11100000000000010010011 *
b111 )
b100 (
b111 '
b100 &
0%
0$
0#
bx "
1!
$end
#200
b10000000 "
0!
#500
b0 -
b0 m$
b0 v$
1%
b0 :
b0 F
b0 [$
b0 l$
b0 I
b0 z#
b0 G
b0 B$
0C$
b0 K
b0 S#
1I$
b0 )
b0 L
b0 U#
b0 X#
b0 {#
b0 @$
b0 D$
b0 o$
0H$
02
b0 ,
b0 @
b0 e$
b0 n$
b111 .
b111 \$
b111 p$
b111 y$
0<
0;
b100000000000 b$
b0 d$
b0 a$
b1 c$
b100011 _$
b0 w$
b1 u$
0Y$
14
1U$
b100011 T$
b1000 (
b1000 j$
b1000 q$
b100000000000000100011 *
b100000000000000100011 `$
b100000000000000100011 f$
b1000 &
b1000 C
b1000 i$
b100 '
b100 >
b100 h$
b100 +
b100 A
b100 E
b100 g$
b100 s$
b111 {$
11
#1000
01
#1500
b111 -
b111 m$
b111 v$
b0 .
b0 \$
b0 p$
b0 y$
b111 0
b111 ]$
b111 k$
12
19
b0 b$
b10 d$
b10 a$
b0 c$
b11 _$
b10 w$
b0 u$
16
15
1W$
04
0U$
b11 T$
b1100 (
b1100 j$
b1100 q$
b100000011 *
b100000011 `$
b100000011 f$
b1100 &
b1100 C
b1100 i$
b1000 '
b1000 >
b1000 h$
b1000 +
b1000 A
b1000 E
b1000 g$
b1000 s$
11
#2000
01
#2500
0M#
0G#
0A#
0;#
05#
0/#
0)#
0##
0{"
0u"
0o"
0i"
0c"
0]"
0W"
0Q"
0K"
0E"
0?"
09"
03"
0-"
0'"
0!"
0y
0s
0m
0g
0a
0[
0U
0O
1Q#
1K#
1E#
1?#
19#
13#
1-#
1'#
1!#
1y"
1s"
1m"
1g"
1a"
1["
1U"
1O"
1I"
1C"
1="
17"
11"
1+"
1%"
1}
1w
1q
1k
1e
1_
1Y
1S
1%
b0 :
b0 F
b0 [$
b0 l$
b110 =
b110 M
b110 Q$
1P$
b111 J
b111 W#
0K$
b111 I
b111 z#
0I$
b111 )
b111 L
b111 U#
b111 X#
b111 {#
b111 @$
b111 D$
b111 o$
b0 G
b0 B$
b1110 K
b1110 S#
1J$
09
b111 .
b111 \$
b111 p$
b111 y$
b0 H
b0 ?$
b111 /
b111 N
b111 V#
b111 Y#
b111 |#
b111 A$
b111 E$
b111 x$
1R$
1;
b0 0
b0 ]$
b0 k$
12
b0 -
b0 m$
b0 v$
b10000110000000000 b$
b110000000010 d$
b10000000011 a$
b10000000001 c$
b110011 _$
b11 w$
b1 u$
b10 t$
b1000 F$
13
1V$
06
05
0W$
b110011 T$
b10000 (
b10000 j$
b10000 q$
b1000000000100010000000110110011 *
b1000000000100010000000110110011 `$
b1000000000100010000000110110011 f$
b10000 &
b10000 C
b10000 i$
b1100 '
b1100 >
b1100 h$
b1100 +
b1100 A
b1100 E
b1100 g$
b1100 s$
b111 (%
11
#3000
01
#3500
b111 -
b111 m$
b111 v$
0%
b111 :
b111 F
b111 [$
b111 l$
1N#
1H#
1B#
1<#
16#
10#
1*#
1$#
1|"
1v"
1p"
1j"
1d"
1^"
1X"
1R"
1L"
1F"
1@"
1:"
14"
1."
1("
1""
1z
1t
1n
1h
1b
1\
1V
1P
0Q#
0K#
0E#
0?#
09#
03#
0-#
0'#
0!#
0y"
0s"
0m"
0g"
0a"
0["
0U"
0O"
0I"
0C"
0="
07"
01"
0+"
0%"
0}
0w
0q
0k
0e
0_
0Y
0S
b0 =
b0 M
b0 Q$
0P$
1L$
b111 S$
0R$
b10111100000000000 b$
b100 d$
b100 a$
b1 c$
b100 w$
b111 F$
b10100 (
b10100 j$
b10100 q$
b100010111001000110011 *
b100010111001000110011 `$
b100010111001000110011 f$
b10100 &
b10100 C
b10100 i$
b10000 '
b10000 >
b10000 h$
b10000 +
b10000 A
b10000 E
b10000 g$
b10000 s$
11
#4000
01
#4500
b1 -
b1 m$
b1 v$
b1 :
b1 F
b1 [$
b1 l$
0N#
0H#
0B#
0<#
06#
00#
0*#
0$#
0|"
0v"
0p"
0j"
0d"
0^"
0X"
0R"
0L"
0F"
0@"
0:"
04"
0."
0("
0""
0z
0t
0n
0h
0b
0\
0V
0P
1O#
1I#
1C#
1=#
17#
11#
1+#
1%#
1}"
1w"
1q"
1k"
1e"
1_"
1Y"
1S"
1M"
1G"
1A"
1;"
15"
1/"
1)"
1#"
1{
1u
1o
1i
1c
1]
1W
1Q
b1 I
b1 z#
b0 J
b0 W#
b1 =
b1 M
b1 Q$
0J$
b1 )
b1 L
b1 U#
b1 X#
b1 {#
b1 @$
b1 D$
b1 o$
b11111111111111111111111111111111 G
b11111111111111111111111111111111 B$
1C$
b1 K
b1 S#
0L$
0M$
1N$
1H$
19
b1 ,
b1 @
b1 e$
b1 n$
b0 /
b0 N
b0 V#
b0 Y#
b0 |#
b0 A$
b0 E$
b0 x$
b110 S$
1<
b11110100000000000 b$
b100000000100 d$
b101 a$
b10011 _$
b101 w$
b11 t$
b110 F$
03
0V$
1Y$
b10011 T$
b11000 (
b11000 j$
b11000 q$
b100011110001010010011 *
b100011110001010010011 `$
b100011110001010010011 f$
b11000 &
b11000 C
b11000 i$
b10101 '
b10101 >
b10101 h$
b10100 +
b10100 A
b10100 E
b10100 g$
b10100 s$
b111 6%
11
#5000
01
#5500
1P#
1J#
1D#
1>#
18#
12#
1,#
1&#
1~"
1x"
1r"
1l"
1f"
1`"
1Z"
1T"
1N"
1H"
1B"
1<"
16"
10"
1*"
1$"
1|
1v
1p
1j
1d
1^
1X
1R
b1 -
b1 m$
b1 v$
0%
b1 :
b1 F
b1 [$
b1 l$
0N#
0H#
0B#
0<#
06#
00#
0*#
0$#
0|"
0v"
0p"
0j"
0d"
0^"
0X"
0R"
0L"
0F"
0@"
0:"
04"
0."
0("
0""
0z
0t
0n
0h
0b
0\
0V
0P
0O#
0I#
0C#
0=#
07#
01#
0+#
0%#
0}"
0w"
0q"
0k"
0e"
0_"
0Y"
0S"
0M"
0G"
0A"
0;"
05"
0/"
0)"
0#"
0{
0u
0o
0i
0c
0]
0W
0Q
1O$
b1 H
b1 ?$
b0 J
b0 W#
b101 =
b101 M
b101 Q$
1J$
b0 )
b0 L
b0 U#
b0 X#
b0 {#
b0 @$
b0 D$
b0 o$
b1 G
b1 B$
0C$
b1 K
b1 S#
0N$
0H$
09
b0 ,
b0 @
b0 e$
b0 n$
b0 .
b0 \$
b0 p$
b0 y$
b1 /
b1 N
b1 V#
b1 Y#
b1 |#
b1 A$
b1 E$
b1 x$
b101 S$
0<
b101101000000000000 b$
b110 d$
b110 a$
b0 c$
b110011 _$
b110 w$
b0 u$
b101 t$
b101 F$
13
1V$
0Y$
b110011 T$
b11100 (
b11100 j$
b11100 q$
b101101001100110011 *
b101101001100110011 `$
b101101001100110011 f$
b11100 &
b11100 C
b11100 i$
b11000 '
b11000 >
b11000 h$
b11000 +
b11000 A
b11000 E
b11000 g$
b11000 s$
b1 7%
11
#6000
01
#6500
1$
1#
b0 -
b0 m$
b0 v$
1Q#
1K#
1E#
1?#
19#
13#
1-#
1'#
1!#
1y"
1s"
1m"
1g"
1a"
1["
1U"
1O"
1I"
1C"
1="
17"
11"
1+"
1%"
1}
1w
1q
1k
1e
1_
1Y
1S
1%
b0 :
b0 F
b0 [$
b0 l$
0P#
0J#
0D#
0>#
08#
02#
0,#
0&#
0~"
0x"
0r"
0l"
0f"
0`"
0Z"
0T"
0N"
0H"
0B"
0<"
06"
00"
0*"
0$"
0|
0v
0p
0j
0d
0^
0X
0R
b110 =
b110 M
b110 Q$
b1 J
b1 W#
1P$
b0 G
b0 B$
b0 H
b0 ?$
b10 K
b10 S#
0O$
1G$
b1 )
b1 L
b1 U#
b1 X#
b1 {#
b1 @$
b1 D$
b1 o$
0J$
02
b100 ,
b100 @
b100 e$
b100 n$
b1 .
b1 \$
b1 p$
b1 y$
b0 S$
0;
1<
b110000100000000100 b$
b100 d$
b100 a$
b101 c$
b1100011 _$
b100 w$
b101 u$
b110 t$
b0 F$
03
0V$
18
1Z$
b1100011 T$
b100000 (
b100000 j$
b100000 q$
b10100110000001001100011 *
b10100110000001001100011 `$
b10100110000001001100011 f$
b100000 &
b100000 C
b100000 i$
b100000 '
b100000 >
b100000 h$
b11100 +
b11100 A
b11100 E
b11100 g$
b11100 s$
b1 8%
11
#7000
01
#7500
1M#
1G#
1A#
1;#
15#
1/#
1)#
1##
1{"
1u"
1o"
1i"
1c"
1]"
1W"
1Q"
1K"
1E"
1?"
19"
13"
1-"
1'"
1!"
1y
1s
1m
1g
1a
1[
1U
1O
0N#
0H#
0B#
0<#
06#
00#
0*#
0$#
0|"
0v"
0p"
0j"
0d"
0^"
0X"
0R"
0L"
0F"
0@"
0:"
04"
0."
0("
0""
0z
0t
0n
0h
0b
0\
0V
0P
b0 -
b0 m$
b0 v$
0Q#
0K#
0E#
0?#
09#
03#
0-#
0'#
0!#
0y"
0s"
0m"
0g"
0a"
0["
0U"
0O"
0I"
0C"
0="
07"
01"
0+"
0%"
0}
0w
0q
0k
0e
0_
0Y
0S
1%
b0 :
b0 F
b0 [$
b0 l$
1K$
b0 I
b0 z#
b10 =
b10 M
b10 Q$
b0 J
b0 W#
0P$
b0 )
b0 L
b0 U#
b0 X#
b0 {#
b0 @$
b0 D$
b0 o$
b0 G
b0 B$
0C$
b0 K
b0 S#
1J$
12
0G$
0$
b0 ,
b0 @
b0 e$
b0 n$
b0 .
b0 \$
b0 p$
b0 y$
b0 /
b0 N
b0 V#
b0 Y#
b0 |#
b0 A$
b0 E$
b0 x$
1;
0<
0#
b0 b$
b100000000110 d$
b111 a$
b0 c$
b110011 _$
b111 w$
b0 u$
b0 t$
13
1V$
08
0Z$
b110011 T$
b100100 (
b100100 j$
b100100 q$
b1110110011 *
b1110110011 `$
b1110110011 f$
b100100 &
b100100 C
b100100 i$
b100000 '
b100000 >
b100000 h$
b100000 +
b100000 A
b100000 E
b100000 g$
b100000 s$
11
#8000
01
#8500
1I$
0J$
02
0;
1$
b0 d$
b0 a$
b1101111 _$
b0 w$
03
0V$
17
1X$
b1101111 T$
b100100 (
b100100 j$
b100100 q$
b1101111 *
b1101111 `$
b1101111 f$
b101000 &
b101000 C
b101000 i$
b100100 '
b100100 >
b100100 h$
b100100 +
b100100 A
b100100 E
b100100 g$
b100100 s$
11
#9000
01
#9500
11
#10000
01
#10500
11
#11000
01
#11500
11
#12000
01
#12500
11
#13000
01
#13500
11
#14000
01
#14500
11
#15000
01
#15500
11
#16000
01
#16500
11
#17000
01
#17500
11
#18000
01
#18500
11
#19000
01
#19500
11
#20000
01
b1010 "
